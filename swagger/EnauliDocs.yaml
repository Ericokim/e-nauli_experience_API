openapi: 3.0.1
info:
  version: 1.0.0
  title: E-nauli Experience API
  description: Experience API for E-nauli Application to manage fleet and sacco.
host: "localhost:5000"
basePath: /
license:
  name: Apache 2.0
  url: "https://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: "http://localhost:5000"
    description: Dev_Server
  - url: "https://e-nauli-experience-api-gbhg.vercel.app"
    description: Prod_Server
paths:
  /api/v1/auth/register:
    post:
      tags:
        - Auth
      summary: Register a user
      description: Create an account for the specified user
      operationId: registerUser
      parameters:
        - name: x-server-key
          in: header
          description: an authorization header
          required: true
          style: simple
          schema:
            type: string
            examples:
              - 6F44EADC71C3D3DC26E7E8D8DDA41
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerBody"
      responses:
        "201":
          description: Request processed successfullyy
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      deprecated: false
  /api/v1/auth/login:
    post:
      tags:
        - Auth
      summary: login user
      description: Signln provides functionality to sign in a user to the web app
      operationId: loginUser
      parameters:
        - name: x-server-key
          in: header
          description: an authorization header
          required: true
          style: simple
          schema:
            type: string
            examples:
              - 6F44EADC71C3D3DC26E7E8D8DDA41
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/loginBody"
      responses:
        "201":
          description: Request processed successfullyy
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      deprecated: false
  /api/v1/auth/logout:
    get:
      tags:
        - Auth
      summary: logout User
      description: Logout User and Clear token cookie
      produces:
        - application/json
      parameters: []
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Request processed successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/v1/auth/changePassword:
    put:
      tags:
        - Auth
      summary: Change user password
      description: Change user password
      operationId: changePassword
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/changePasswordBody"
      responses:
        "200":
          description: Request processed successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /api/v1/auth/resetPassword:
    put:
      tags:
        - Auth
      summary: reset user password
      description: reset user password
      operationId: resetPassword
      parameters:
        - name: x-server-key
          in: header
          required: true
          description: an authorization header
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/resetPasswordBody"
      responses:
        "200":
          description: Request processed successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /api/v1/auth/addWebProfile:
    put:
      tags:
        - Auth
      summary: add user WebProfile
      description: add user WebProfile
      operationId: addWebProfile
      parameters:
        - name: x-server-key
          in: header
          required: true
          description: an authorization header
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/addWebProfileBody"
      responses:
        "200":
          description: Request processed successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /api/v1/fleet/getVehicles:
    get:
      tags:
        - Fleet
      summary: Fetch all Vehicles
      description: Return list of all Vehicles
      produces:
        - application/json
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            description: >-
              The number of items to skip before starting to collect the result
              set
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            description: The numbers of items to return
        - name: saccoId
          in: query
          required: false
          schema:
            type: string
            description: Filter operations
        - name: routeId
          in: query
          required: false
          schema:
            type: string
            description: Filter operations
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Request processed successfully
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Vehicle"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/v1/fleet/addVehicle:
    post:
      tags:
        - Fleet
      summary: Add Vehicles
      description: Create Vehicle
      operationId: createVehicle
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VehicleBody"
      responses:
        "201":
          description: Request processed successfullyy
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
  /api/v1/fleet/updateVehicle:
    put:
      tags:
        - Fleet
      summary: Update Vehicles
      description: Update Vehicle
      operationId: updateVehicle
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VehicleBodyUpdate"
      responses:
        "200":
          description: Request processed successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /api/v1/fleet/getOperators:
    get:
      tags:
        - Fleet
      summary: Fetch all Operators
      description: Return list of all Operators
      produces:
        - application/json
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            description: >-
              The number of items to skip before starting to collect the result
              set
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            description: The numbers of items to return
        - name: vehicleId
          in: query
          required: false
          schema:
            type: string
            description: Filter operations
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Request processed successfully
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Operator"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/v1/fleet/addOperator:
    post:
      tags:
        - Fleet
      summary: Add Operators
      description: Create Operator
      operationId: createOperator
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperatorBody"
      responses:
        "201":
          description: Request processed successfullyy
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
  /api/v1/fleet/updateOperator:
    put:
      tags:
        - Fleet
      summary: Update Operators
      description: Update Operator
      operationId: updateOperator
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperatorBodyUpdate"
      responses:
        "200":
          description: Request processed successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /api/v1/sacco/getSaccos:
    get:
      tags:
        - Sacco
      summary: Fetch all Saccos
      description: Return list of all Saccos
      operationId: allSacco
      produces:
        - application/json
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            description: >-
              The number of items to skip before starting to collect the result
              set
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            description: The numbers of items to return
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Request processed successfully
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Sacco"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/api/v1/sacco/getSacco/{id}":
    get:
      tags:
        - Sacco
      summary: Fetch single Sacco
      description: ""
      operationId: singleSacco
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Request processed successfully
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Sacco"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
  /api/v1/sacco/addSacco:
    post:
      tags:
        - Sacco
      summary: Add Sacco
      description: Create Sacco
      operationId: createSacco
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaccoBody"
      responses:
        "201":
          description: Request processed successfullyy
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
  /api/v1/sacco/updateSacco:
    put:
      tags:
        - Sacco
      summary: Update Sacco
      description: Update Sacco
      operationId: updateSacco
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaccoBodyUpdate"
      responses:
        "200":
          description: Request processed successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /api/v1/sacco/updateSaccoStatus:
    put:
      tags:
        - Sacco
      summary: Update Sacco Status
      description: Update Sacco Status
      operationId: updateSaccoStatus
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaccoBodyStatusUpdate"
      responses:
        "200":
          description: Request processed successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /api/v1/sacco/getSaccoCharges:
    get:
      tags:
        - Sacco Charge
      summary: Fetch all Sacco Charges
      description: Return list of all Sacco Charges
      produces:
        - application/json
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            description: >-
              The number of items to skip before starting to collect the result
              set
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            description: The numbers of items to return
        - name: saccoId
          in: query
          required: false
          schema:
            type: string
            description: Filter operations
        - name: charge
          in: query
          required: false
          schema:
            type: string
            description: Filter operations
            enum:
              - PlatformCharge
              - StatementCharge
              - " ManifestCharge"
              - ParcelCharge
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Request processed successfully
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/SaccoCharge"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/api/v1/sacco/getSaccoCharge/{id}":
    get:
      tags:
        - Sacco Charge
      summary: Fetch single Sacco Charge
      description: ""
      operationId: singleSaccoCharge
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Request processed successfully
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/SaccoCharge"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
  /api/v1/sacco/addSaccoCharge:
    post:
      tags:
        - Sacco Charge
      summary: Add Sacco Charge
      description: Create SaccoCharge
      operationId: createSaccoCharge
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaccoChargeBody"
      responses:
        "201":
          description: Request processed successfullyy
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
  /api/v1/sacco/updateSaccoCharge:
    put:
      tags:
        - Sacco Charge
      summary: Update Sacco Charges
      description: Update Sacco Charge
      operationId: updateSaccoCharge
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaccoChargeBodyUpdate"
      responses:
        "200":
          description: Request processed successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /api/v1/sacco/updateSaccoChargeStatus:
    put:
      tags:
        - Sacco Charge
      summary: Update Sacco Charge Status
      description: Update Sacco Charge Status
      operationId: updateSaccoChargeStatus
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaccoChargeBodyStatusUpdate"
      responses:
        "200":
          description: Request processed successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /api/v1/sacco/SaccoBalance:
    post:
      tags:
        - Sacco
      summary: Sacco Balance
      description: Gets specified sacco account running balance in cents
      operationId: SaccoBalance
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaccoBalanceBody"
      responses:
        "201":
          description: Request processed successfullyy
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
  /api/v1/sacco/getSaccoStations:
    get:
      tags:
        - Sacco Station
      summary: Fetch all Sacco Station
      description: Return list of all Sacco Station
      produces:
        - application/json
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            description: >-
              The number of items to skip before starting to collect the result
              set
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            description: The numbers of items to return
        - name: saccoId
          in: query
          required: false
          schema:
            type: string
            description: Filter operations
        - name: isActive
          in: query
          required: false
          schema:
            type: string
            description: Filter operations
            enum:
              - "true"
              - "false"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Request processed successfully
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/SaccoStation"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/api/v1/sacco/getSaccoStation/{id}":
    get:
      tags:
        - Sacco Station
      summary: Fetch single Sacco Station
      description: ""
      operationId: singleSaccoStation
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Request processed successfully
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/SaccoStation"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
  /api/v1/sacco/addSaccoStation:
    post:
      tags:
        - Sacco Station
      summary: Add Sacco Station
      description: Create Sacco Station
      operationId: createSaccoStation
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaccoStationBody"
      responses:
        "201":
          description: Request processed successfullyy
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
  /api/v1/sacco/updateSaccoStation:
    put:
      tags:
        - Sacco Station
      summary: Update Sacco Station
      description: Update Sacco Station
      operationId: updateSaccoStation
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaccoStationBodyUpdate"
      responses:
        "200":
          description: Request processed successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /api/v1/sacco/updateSaccoStationStatus:
    put:
      tags:
        - Sacco Station
      summary: Update Sacco Station Status
      description: Update Sacco Station Status
      operationId: updateSaccoStationStatus
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaccoStationBodyStatusUpdate"
      responses:
        "200":
          description: Request processed successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /api/v1/sacco/getSaccosOfficials:
    get:
      tags:
        - Sacco Official
      summary: Fetch all Sacco Official
      description: Return list of all Sacco Official
      produces:
        - application/json
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            description: >-
              The number of items to skip before starting to collect the result
              set
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            description: The numbers of items to return
        - name: saccoId
          in: query
          required: false
          schema:
            type: string
            description: Filter operations
        - name: saccoStationId
          in: query
          required: false
          schema:
            type: string
            description: Filter operations
        - name: userId
          in: query
          required: false
          schema:
            type: string
            description: Filter operations
        - name: isActive
          in: query
          required: false
          schema:
            type: string
            description: Filter operations
            enum:
              - "true"
              - "false"
        - name: designation
          in: query
          required: false
          schema:
            type: string
            description: Filter operations
            enum:
              - Official
              - Agent
              - Clerk
              - Fuel
              - StationManager
              - ParcelAgent
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Request processed successfully
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/SaccosOfficial"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/api/v1/sacco/getSaccosOfficial/{id}":
    get:
      tags:
        - Sacco Official
      summary: Fetch single Sacco Official
      description: ""
      operationId: singleSaccosOfficial
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Request processed successfully
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/SaccosOfficial"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
  /api/v1/sacco/addSaccosOfficial:
    post:
      tags:
        - Sacco Official
      summary: Add Sacco Official
      description: Create Sacco Official
      operationId: createSaccosOfficial
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaccosOfficialBody"
      responses:
        "201":
          description: Request processed successfullyy
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
  /api/v1/sacco/updateSaccosOfficial:
    put:
      tags:
        - Sacco Official
      summary: Update Sacco Official
      description: Update Sacco Official
      operationId: updateSaccosOfficial
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaccosOfficialBodyUpdate"
      responses:
        "200":
          description: Request processed successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
  /api/v1/sacco/updateSaccosOfficialStatus:
    put:
      tags:
        - Sacco Official
      summary: Update Sacco Official Status
      description: Update Sacco Official Status
      operationId: updateSaccosOfficialStatus
      parameters: []
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaccosOfficialBodyStatusUpdate"
      responses:
        "200":
          description: Request processed successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
components:
  securitySchemes:
    bearerAuth:
      type: http
      description: >-
        JWT Authorization header using the Bearer scheme. Enter in the value
        field: <b>{your JWT token}</b>
      scheme: bearer
      bearerFormat: JWT
  schemas:
    registerBody:
      type: object
      properties:
        idNumber:
          type: string
          required: true
          description: User id number
        msisdn:
          type: string
          required: true
          description: >-
            Phone number of the user in INTERNATIONAl format. E.g. 2547XXXXXX or
            2541XXXXXX
        yearOfBirth:
          type: string
          required: true
          description: Year of Birth
        pin:
          type: string
          required: true
          description: 4 Digit Pin to secure user account
        carrierCode:
          type: string
          required: true
          description: 5 digit carrier code identifying phone number network
      example:
        idNumber: string
        msisdn: string
        yearOfBirth: string
        pin: string
        carrierCode: string
    loginBody:
      type: object
      properties:
        emailOrPhoneNumber:
          type: string
          required: true
          description: >-
            valid email or phone number(07XXX or 01XXX or 254XX) to be used for
            login
        password:
          type: string
          required: true
          description: User password
      example:
        emailOrPhoneNumber: string
        password: string
    changePasswordBody:
      type: object
      properties:
        msisdnOrEmail:
          type: string
          required: true
          description: Users msisdn or email
        oldPassword:
          type: string
          required: true
          description: Old password
        newPassword:
          type: string
          required: true
          description: New password
      example:
        msisdnOrEmail: string
        oldPassword: string
        newPassword: string
    resetPasswordBody:
      type: object
      properties:
        msisdn:
          type: string
          required: true
          description: Phone number of the user to reset password
        code:
          type: string
          required: true
          description: Verification code
        newPassword:
          type: string
          required: true
          description: New password
      example:
        msisdn: string
        code: string
        newPassword: string
    addWebProfileBody:
      type: object
      properties:
        msisdn:
          type: string
          required: true
          description: >-
            Phone number of the user in INTERNATIONAl format. E.g. 2547XXXXXX or
            2541XXXXXX
        saccoId:
          type: string
          required: true
          description: Identifier of sacco to which a user is an official
        email:
          type: string
          required: true
          description: Email address
        password:
          type: string
          required: true
          description: 4 Digit Pin to secure user account
        designation:
          type: enum
          Enumerator:
            - Official
            - Agent
            - Clerk
            - Fuel
            - StationManager
            - ParcelAgent
        saccoStationId:
          type: string
          required: false
          description: Optional. Sacco Station assigned to the profile/user getting created
      example:
        msisdn: string
        saccoId: string
        email: string
        password: string
        designation: Official
        saccoStationId: string
    Vehicle:
      type: object
      properties:
        vehicleId:
          type: string
          description: The auto-generated id of the vehicle
        plateNumber:
          type: string
          description: Plate Number of the vehicle
        seatingCapacity:
          type: integer
        saccoId:
          type: string
          description: saccoId of the vehicle
        saccoName:
          type: string
        routeId:
          type: string
        route:
          type: string
        isActive:
          type: boolean
          description: Status of the vehicle
        primaryTerminus:
          type: string
        secondaryTerminus:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
      example:
        message: string
        count: 0
        data:
          - vehicleId: string
            plateNumber: string
            seatingCapacity: 0
            saccoId: string
            saccoName: string
            routeId: string
            route: string
            isActive: true
            primaryTerminus: string
            secondaryTerminus: string
            createdAt: "2022-12-14T10:23:04.293Z"
            modifiedAt: "2022-12-14T10:23:04.293Z"
    VehicleBody:
      type: object
      properties:
        plateNumber:
          type: string
          required: true
          description: The auto-generated id of the vehicle
        seatingCapacity:
          type: integer
          required: true
        saccoId:
          type: string
          required: true
          description: saccoId of the vehicle
        fleetNumber:
          type: string
          required: false
          description: saccoId of the vehicle
      example:
        plateNumber: string
        saccoId: string
        seatingCapacity: 0
        fleetNumber: string
    VehicleBodyUpdate:
      type: object
      properties:
        vehicleId:
          type: string
          required: true
          description: The auto-generated id of the vehicle
        plateNumber:
          type: string
          required: false
          description: Plate Number of the vehicle
        seatingCapacity:
          type: integer
          required: false
        saccoId:
          type: string
          required: false
          description: Sacco under which to register a vehicle
        routeId:
          type: string
          required: false
          description: Route to which the stage belongs
        fleetNumber:
          type: string
          required: false
          description: Fleet number of the vehicle
      example:
        vehicleId: string
        plateNumber: string
        fleetNumber: string
        saccoId: string
        routeId: string
        seatingCapacity: 0
    Operator:
      type: object
      properties:
        vehicleId:
          type: string
          description: The auto-generated id of the vehicle
        plateNumber:
          type: string
          description: The auto-generated id of the vehicle
        fleetNumber:
          type: string
        role:
          type: string
        isActive:
          type: boolean
          description: Status of the vehicle
        createdAt:
          type: string
        modifiedAt:
          type: string
        user:
          userId:
            type: string
          msisdn:
            type: string
          idNumber:
            type: string
          firstName:
            type: string
          middleName:
            type: string
          lastName:
            type: string
          email:
            type: string
      example:
        message: string
        count: 0
        data:
          - vehicleId: string
            plateNumber: string
            fleetNumber: string
            role: string
            isActive: true
            createdAt: "2022-12-14T10:59:10.607Z"
            modifiedAt: "2022-12-14T10:59:10.607Z"
            user:
              userId: string
              msisdn: string
              idNumber: string
              firstName: string
              middleName: string
              lastName: string
              email: string
    OperatorBody:
      type: object
      properties:
        msisdn:
          type: string
          required: true
          description: >-
            Phone number of the operator in INTERNATIONAl format. E.g.
            2547XXXXXX or 2541XXXXXX
        vehicleId:
          type: string
          required: true
          description: vehicleId of the operator
        role:
          type: enum
          required: true
          description: Designation of a user to a vehicle. Can be one or multiple
          Enumerator:
            - Conductor
            - Driver
            - Owner
        firstName:
          type: string
          required: false
          description: First name of operator if available
        middleName:
          type: string
          required: false
          description: Middle name of operator if available
        lastName:
          type: string
          required: false
          description: Last name of operator if available
        accountNumber:
          type: string
          required: false
          description: >-
            Account number of the preferred bank. If account number is provided,
            the other bank details must be provided
        bankName:
          type: string
          required: false
          description: Bank to which account belongs
        bankBranch:
          type: string
          required: false
          description: Branch of user account
        bankCode:
          type: string
          required: false
          description: Bank code
      example:
        msisdn: "254725358366"
        vehicleId: string
        role:
          - Conductor
        firstName: string
        middleName: string
        lastName: string
        accountNumber: string
        bankName: string
        bankBranch: string
        bankCode: string
    OperatorBodyUpdate:
      type: object
      properties:
        userId:
          type: string
          required: true
          description: Identifier of the user with the system
        vehicleId:
          type: string
          required: true
          description: vehicleId of the operator
        role:
          type: enum
          required: true
          description: Designation of a user to a vehicle. Can be one or multiple
          Enumerator:
            - Conductor
            - Driver
            - Owner
        activate:
          type: boolean
          required: true
          description: >-
            Activate flag toggles active(activate: true) and inactive(activate:
            false) status of an operator role for a specified vehicle
          example:
            - "true"
            - "false"
      example:
        userId: string
        vehicleId: string
        role: Conductor
        activate: true
    Sacco:
      type: object
      properties:
        saccoId:
          type: string
        name:
          type: string
        address:
          type: string
        contactPerson:
          type: string
        contactNumber:
          type: string
        postalAddress:
          type: string
        pin:
          type: string
        senderId:
          type: string
        isActive:
          type: boolean
        tagline:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
      example:
        message: string
        count: 0
        data:
          - saccoId: string
            name: string
            address: string
            contactPerson: string
            contactNumber: string
            postalAddress: string
            pin: string
            senderId: string
            isActive: true
            tagline: string
            createdAt: "2022-12-14T11:36:50.806Z"
            modifiedAt: "2022-12-14T11:36:50.807Z"
    SaccoBody:
      type: object
      properties:
        pin:
          type: string
          required: true
          description: Sacco PIN
        name:
          type: string
          required: true
          description: Sacco Name
        senderId:
          type: string
          required: false
          description: Sacco specific sender id if it exists
        address:
          type: string
          required: false
          description: >-
            Where the sacco main office is located e.g. Mezza Office, 2nd Floor
            Karatina
        contactPerson:
          type: string
          required: false
          description: Name of saccos contact person
        contactNumber:
          type: string
          required: false
          description: The contact number of the contact person
        postalAddress:
          type: string
          required: false
          description: Box address of the sacco. E.g P.O. Box 34-00200 or P.O. Box 2399
        tagline:
          type: string
          required: false
          description: >-
            The tagline to be used in sacco receipts - expense, parcel and any
            other receipts
        code:
          type: string
          required: false
          description: >-
            Optional. Is a unique 2-Letter prefix to be used when a sacco uses
            fleet number to identify vehicles
        region:
          type: string
          required: false
          description: Region within which the sacco operates
        primaryTerminus:
          type: string
          required: false
          description: Main Terminus of the route - mostly Nairobi
        secondaryTerminus:
          type: string
          required: false
          description: Secondary Terminus of the route
        maximumFare:
          type: string
          required: false
          description: Maximum fare for the route. In CENTS
        platformFee:
          type: string
          required: false
          description: Fees incurred for using E-Nauli platform. In CENTS
      example:
        pin: "1995"
        name: kimSACCO
        senderId: string
        address: string
        contactPerson: Eric
        contactNumber: "254713081296"
        postalAddress: "3329"
        tagline: string
        code: "95"
        region: thika
        primaryTerminus: thika
        secondaryTerminus: nairobi
        maximumFare: 100
        platformFee: 10
    SaccoBodyUpdate:
      type: object
      properties:
        saccoId:
          type: string
          required: true
          description: Sacco identifier
        pin:
          type: string
          required: false
          description: Sacco PIN
        name:
          type: string
          required: false
          description: Sacco Name
        senderId:
          type: string
          required: false
          description: Sacco specific sender id if it exists
        address:
          type: string
          required: false
          description: >-
            Where the sacco main office is located e.g. Mezza Office, 2nd Floor
            Karatina
        contactPerson:
          type: string
          required: false
          description: Name of saccos contact person
        contactNumber:
          type: string
          required: false
          description: The contact number of the contact person
        postalAddress:
          type: string
          required: false
          description: Box address of the sacco. E.g P.O. Box 34-00200 or P.O. Box 2399
        tagline:
          type: string
          required: false
          description: >-
            The tagline to be used in sacco receipts - expense, parcel and any
            other receipts
      example:
        saccoId: string
        pin: string
        senderId: string
        name: string
        address: string
        contactPerson: string
        contactNumber: string
        postalAddress: string
        tagline: string
    SaccoBalanceBody:
      type: object
      properties:
        userId:
          type: string
          required: true
          description: Sacco officials users identifier. Can be 0 for admin look up calls
        saccoId:
          type: string
          required: true
          description: Sacco identifier
      example:
        userId: 617851833I133121
        saccoId: string
    SaccoBodyStatusUpdate:
      type: object
      properties:
        id:
          type: string
          required: true
          description: Identifier of the entity to toggle status
        activate:
          type: boolean
          required: true
          description: >-
            Activate flag toggles active(activate: true) and inactive(activate:
            false) status
          example:
            - "true"
            - "false"
      example:
        id: string
        activate: true
    SaccosOfficial:
      type: object
      properties:
        saccoOfficialId:
          type: string
        saccoId:
          type: string
        saccoStationId:
          type: string
        designation:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
        modifiedAt:
          type: string
        user:
          userId:
            type: string
          msisdn:
            type: string
          idNumber:
            type: string
          firstName:
            type: string
          middleName:
            type: string
          lastName:
            type: string
          email:
            type: string
        sacco:
          saccoId:
            type: string
          name:
            type: string
        saccoStation:
          saccoStationId:
            type: string
          name:
            type: string
      example:
        message: string
        count: 0
        data:
          - saccoOfficialId: string
            saccoId: string
            saccoStationId: string
            designation: string
            isActive: true
            createdAt: "2022-12-14T12:54:28.481Z"
            modifiedAt: "2022-12-14T12:54:28.481Z"
            user:
              userId: string
              msisdn: string
              idNumber: string
              firstName: string
              middleName: string
              lastName: string
              email: string
            sacco:
              saccoId: string
              name: string
            saccoStation:
              saccoStationId: string
              name: string
    SaccosOfficialBody:
      type: object
      properties:
        saccoId:
          type: string
          required: true
          description: Identifier of sacco to which a user is an official
        msisdn:
          type: string
          required: true
          description: >-
            Phone number of the sacco official in INTERNATIONAl format. E.g.
            2547XXXXXX or 2541XXXXXX
        designation:
          type: enum
          Enumerator:
            - Official
            - Agent
            - Clerk
            - Fuel
            - StationManager
            - ParcelAgent
        saccoStationId:
          type: string
          required: true
          description: Optional. Sacco Station assigned to the profile/user getting created
      example:
        saccoId: string
        msisdn: "254134936156"
        designation: Official
        saccoStationId: string
    SaccosOfficialBodyUpdate:
      type: object
      properties:
        saccoOfficialId:
          type: string
          required: true
          description: Sacco charge identifier
        designation:
          type: enum
          Enumerator:
            - Official
            - Agent
            - Clerk
            - Fuel
            - StationManager
            - ParcelAgent
        saccoStationId:
          type: string
          required: true
          description: Optional. Sacco Station assigned to the profile/user getting created
      example:
        saccoOfficialId: string
        saccoStationId: string
        designation: Official
    SaccosOfficialBodyStatusUpdate:
      type: object
      properties:
        saccoOfficialId:
          type: string
          required: true
          description: Identifier of the entity to toggle status
        activate:
          type: boolean
          required: true
          description: >-
            Activate flag toggles active(activate: true) and inactive(activate:
            false) status
          example:
            - "true"
            - "false"
      example:
        saccoOfficialId: string
        activate: true
    SaccoStation:
      type: object
      properties:
        saccoStationId:
          type: string
        saccoId:
          type: string
        name:
          type: string
        isActive:
          type: boolean
        phoneNumber:
          type: string
      example:
        message: string
        count: 0
        data:
          - saccoStationId: string
            saccoId: string
            name: string
            isActive: true
            phoneNumber: string
    SaccoStationBody:
      type: object
      properties:
        saccoId:
          type: string
          required: true
          description: Identifier of sacco
        stations:
          - name:
              type: string
              required: true
              description: Name of the station
            phoneNumber:
              type: string
              required: false
              description: Contact line for the sacco station or their preferred number
      example:
        saccoId: string
        stations:
          - name: string
            phoneNumber: string
    SaccoStationBodyUpdate:
      type: object
      properties:
        saccoStationId:
          type: string
          required: true
          description: id for the station
        saccoId:
          type: string
          required: false
          description: Id for the sacco the station is tied to
        name:
          type: string
          required: false
          description: Name of station
        phoneNumber:
          type: string
          required: false
          description: Contact line for the sacco station or their preferred number
      example:
        saccoStationId: string
        saccoId: string
        name: string
        phoneNumber: string
    SaccoStationBodyStatusUpdate:
      type: object
      properties:
        id:
          type: string
          required: true
          description: Identifier of the entity to toggle status
        activate:
          type: boolean
          required: true
          description: >-
            Activate flag toggles active(activate: true) and inactive(activate:
            false) status
          example:
            - "true"
            - "false"
      example:
        id: string
        activate: true
  responses:
    validationBadge:
      description: result of validation as valid/invalid badge
      content:
        image/png:
          schema:
            type: string
            format: binary
    parseResponse:
      description: the parsed / resolved specification
      content:
        application/json:
          schema:
            type: string
        text/plain:
          schema:
            type: string
        application/octet-stream:
          schema:
            type: string
            format: binary
security:
  - bearerAuth: []
tags:
  - name: Auth
  - name: Fleet
  - name: Sacco
  - name: Sacco Charge
  - name: Sacco Official
  - name: Sacco Station
